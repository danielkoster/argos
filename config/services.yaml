# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        App\Feed\FeedProcessorInterface:
            tags: ['app.feed_processor']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Client\TransmissionClient:
        arguments:
            $host: '%env(key:host:url:TRANSMISSION_DSN)%'
            $port: '%env(key:port:url:TRANSMISSION_DSN)%'
            $path: '%env(key:path:url:TRANSMISSION_DSN)%'
            $user: '%env(key:user:url:TRANSMISSION_DSN)%'
            $pass: '%env(key:pass:url:TRANSMISSION_DSN)%'

    App\EventListener\DownloadEpisodeCandidate:
        tags:
            - { name: 'doctrine.event_listener', event: 'postPersist' }

    App\EventListener\SendDownloadNotification:
        tags:
            - { name: 'doctrine.event_listener', event: 'postPersist' }

    App\MessageHandler\DownloadEpisodeMessageHandler:
        arguments:
            $favouredUploaders: '%env(csv:FAVOURED_UPLOADERS)%'
            $unfavouredUploaders: '%env(csv:UNFAVOURED_UPLOADERS)%'

    App\MessageHandler\ParseFeedMessageHandler:
        arguments:
            $feedProcessorsLocator: !tagged_locator app.feed_processor

    App\Security\TokenAuthenticator:
        arguments:
            $apiToken: '%env(API_TOKEN)%'

    App\Service\DownloadService:
        arguments:
            $downloadPath: '%env(DOWNLOAD_PATH)%'
